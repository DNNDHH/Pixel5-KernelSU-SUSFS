name: Build Pixel5 Android 14 KernelSU-Next SUSFS

permissions:
  contents: read 
  actions: read

on:
  workflow_dispatch:
    inputs:
      build_redbull:
        description: 'Build redbull 4.19 kernel?'
        required: true
        type: boolean
        default: true

jobs:
  build-kernel-4-19-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get build space
        run: |
          free -h
          df -h

      - name: Set CONFIG Environment Variable
        run: |
          CONFIG="redbull"
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo
        run: |
          mkdir -p ./git-repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> $GITHUB_ENV

      - name: Install Others
        run: |
          sudo apt update
          sudo apt install build-essential flex bison libssl-dev libelf-dev libncurses5-dev gcc-aarch64-linux-gnu make

      - name: Clone AnyKernel3 and Other Dependencies
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."
          ANYKERNEL_BRANCH="main"
          SUSFS_BRANCH="kernel-4.19"
          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"
          git clone https://github.com/WildPlusKernel/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
          git clone https://github.com/Myviforme/kernel_patches.git

      - run: ls -l

      - name: üîç Locate ramdisk
        id: locate_ramdisk
        run: |
          echo "üìÅ ÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÔºö$(pwd)"
          echo "üì¶ ÊêúÁ¥¢ ramdisk ..."
          FOUND=$(find . -type f -name "ramdisk" | head -n 1)
          if [ -z "$FOUND" ]; then
            echo "‚ùå Êú™ÊâæÂà∞ ramdisk Êñá‰ª∂ÔºåÁªàÊ≠¢ÊûÑÂª∫„ÄÇÈáçË¶ÅÊñá‰ª∂„ÄÇ„ÄÇ‰∏çÈõÜÊàêÁºñËØëËøõÂéª‰ºöÂºÄ‰∏ç‰∫ÜÊú∫„ÄÇ„ÄÇÂìàÂìà"
            exit 1
          else
            echo "‚úÖ ÊâæÂà∞‰∫ÜÊñá‰ª∂Ôºö$FOUND"
            echo "FOUND_PATH=$FOUND" >> $GITHUB_ENV
          fi

      - name: Initialize and Sync Kernel Source
        run: |
          echo "ÂàõÂª∫ÈÖçÁΩÆÁõÆÂΩïÔºö$CONFIG"
          mkdir -p "$CONFIG"
          echo "Â§çÂà∂ ramdiskÔºö$FOUND_PATH Âà∞ $CONFIG/"
          cp -fv "$FOUND_PATH" "$CONFIG/"
          cp -fv vendor_ramdisk "$CONFIG/"
          cd "$CONFIG"
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://android.googlesource.com/kernel/manifest -b android-msm-redbull-4.19-android14-qpr3 --repo-rev=v2.54 --depth=1
          $REPO --version
          $REPO --trace sync -c -j$(nproc --all) --no-tags --fail-fast
          cp -fv ramdisk prebuilts/boot-artifacts/ramdisks/ramdisk-aosp_arm64.img
          cp -fv vendor_ramdisk prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-barbet.img
          cp -fv vendor_ramdisk prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-redfin.img
          cp -fv vendor_ramdisk prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-bramble.img

      - name: Add KernelSU
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/private/msm-google/"
          COMMIT_ID="7b0944645172"
          if git rev-parse --quiet --verify "$COMMIT_ID^{commit}"; then
              echo "‚úÖ Found commit $COMMIT_ID, checking out..."
              git checkout $COMMIT_ID
          else
              echo "‚ö†Ô∏è Commit $COMMIT_ID not found, skipping checkout."
          fi
          echo "Adding KernelSU..."
          curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash -

      - name: Apply SUSFS Patches
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/private/msm-google/"
          echo "Applying SUSFS patches..."
          cp ../../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../../susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.19.patch ./
          cp ../../../susfs4ksu/kernel_patches/fs/* ./fs/
          cp ../../../susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          cd ./KernelSU
          patch -p1 --fuzz=3 < 10_enable_susfs_for_ksu.patch || true
          cd ..
          patch -p1 --fuzz=3 < 50_add_susfs_in_kernel-4.19.patch || true

      - name: Apply KSU Hooks
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/private/msm-google/"
          cp ../../../kernel_patches/ksu_hooks_4.19.patch ./
          patch -p1 --fuzz=3 < ./ksu_hooks_4.19.patch

      - name: Add SUSFS Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/private/msm-google/"
          echo "Adding configuration settings to redbull_defconfig..."
          echo "CONFIG_KSU=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./arch/arm64/configs/redbull_defconfig
          echo "CONFIG_TMPFS_XATTR=y" >> ./arch/arm64/configs/redbull_defconfig

      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/private/msm-google/"
          echo "Running sed commands..."
          sed -i 's/check_defconfig//' ./build.config.common
          sed -i 's/check_defconfig//' ./build.config.redbull
          sed -i 's/check_defconfig && //' ./build.config.redbull.no-cfi
          sed -i '$s|echo "\$res"|echo "\-g7b0944645172-ab10812814-NekomayaMidori"|' ./scripts/setlocalversion
          sed -i 's/-dirty//' ./scripts/setlocalversion
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2025"}' ./scripts/mkcompile_h

      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          echo "Building the kernel..."
          BUILD_AOSP_KERNEL=1 ./build_redbull.sh

      - name: Create Bootimgs Folder and Copy Images
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          echo "Copying Image"
          cp -r ./out/android-msm-pixel-4.19/dist/Image.lz4 ../AnyKernel3/Image

      - name: Create ZIP Files for Different Formats
        run: |
          echo "Creating zip files for all formats..."
          cd ./AnyKernel3
          ZIP_NAME="PIXEL-5-A14-KernelSU-SUSFS.zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*

      - name: AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3
          path: |
            *.zip

      - name: boot.img
        uses: actions/upload-artifact@v4
        with:
          name: boot.img
          path: "redbull/out/android-msm-pixel-4.19/dist/boot.img"

      - name: vendor_boot.img
        uses: actions/upload-artifact@v4
        with:
          name: vendor_boot.img
          path: "redbull/out/android-msm-pixel-4.19/dist/vendor_boot.img"

      - name: dtbo.img
        uses: actions/upload-artifact@v4
        with:
          name: dtbo.img
          path: "redbull/out/android-msm-pixel-4.19/dist/dtbo.img"
